name: GitHubActionsDemo
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€

on:
  push:
# https://docs.github.com/en/free-pro-team@latest/rest/actions/workflows?apiVersion=2022-11-28#create-a-workflow-dispatch-event
  workflow_dispatch:
    inputs:
      subsys:
        type: string
        default: inputValue
      sigla:
        type: string
        default: SC4
  repository_dispatch:
    types: [on-demand-test]

env:
  MY_WORKFLOW_VARIABLE: "My workflow var value"
  SIGLA: ""

jobs:
  showWorkflowEnvVariables:
    runs-on: ubuntu-latest
    steps:
      - run: env

  intermediario:
    runs-on: ubuntu-latest
    outputs:
      MY_JOB_OUTPUT: ${{ steps.step1.outputs.MYVARIABLE }}
      SIGLA: ${{ steps.step1.outputs.SIGLA }}
    steps:
      - id: step1
        run: |
          echo "MYVARIABLE=$MY_WORKFLOW_VARIABLE" >> "$GITHUB_OUTPUT"
          echo "SIGLA=`echo ${{ inputs.sigla }} | tr '[:upper:]' '[:lower:]'`" >> "$GITHUB_OUTPUT"
          echo $SIGLA

  # jobiniciaprograma:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 2
  #   steps:
  #     - uses: actions/checkout@v4
      
  #     - id: rodaprograma
  #       run: |
  #         (bash meuprograma.sh > logs.txt) &

  # joblelogs:
  #   runs-on: ubuntu-latest
  #   needs: [jobiniciaprograma]
  #   timeout-minutes: 2
  #   steps:
  #     - id: lelogs
  #       run: |
  #         sleep 3
  #         tail -f logs.txt | sed '/^20$/q'
        
  job0:
    runs-on: ubuntu-latest
    # needs: [joblelogs]
    timeout-minutes: 2
    steps:
      - id: step1
        run: echo "$MY_WORKFLOW_VARIABLE"

      - id: step2
        run: echo "${{ vars.MY_WORKFLOW_VARIABLE }}"

      - id: step3
        run: echo "${{ env.MY_WORKFLOW_VARIABLE }}"

      - uses: actions/checkout@v4
      - id: step4
        timeout-minutes: 2
        run: |
          ls
          (bash meuprograma.sh &)
          echo Step finalizado

      - id: step5
        run: |
          bash meuprograma.sh

  job01:
    needs:
      - intermediario
    uses: sudopablosilva/mynewrepository/.github/workflows/ReusableWorkflow.yml@main
    with:
      subsys: ${{ needs.intermediario.outputs.SIGLA }}
      
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      OUTPUT12: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
      - id: step1
        run: echo "test=hello" >> "$GITHUB_OUTPUT"
      - id: step2
        run: echo "test=world" >> "$GITHUB_OUTPUT"
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - env:
          OUTPUT1: ${{needs.job1.outputs.OUTPUT12}}
          OUTPUT2: ${{needs.job1.outputs.output2}}
        run: echo "$OUTPUT1 $OUTPUT2"
        
  # job1:
  #   outputs:
  #     MYOUTPUT: ${{ steps.step1.outputs.MYVAR2 }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: step1
  #       run: echo "MYVAR2=myvalue" >> "$GITHUB_OUTPUT"
  # job2:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - job1
  #   steps:
  #     - run: echo "$OUTPUTFROMJOB1"
  #       env:
  #         OUTPUTFROMJOB1: ${{ needs.job1.outputs.MYOUTPUT }}

          
      # - run: echo "$OUTPUTFROMJOB1"
#   print-tag:
#     runs-on: ubuntu-latest
#     if:  ${{ inputs.print_tags }} 
#     steps:
#       - name: Print subsys tag to STDOUT
#         run: echo The subsys value is ${{ inputs.subsys}}
#       - name: Print package tag to STDOUT
#         run: echo The package value is ${{ inputs.package}}
#       - name: Print funcao tag to STDOUT
#         run: echo The funcao value is ${{ inputs.funcao}}
#       - name: Print sitename tag to STDOUT
#         run: echo The sitename value is ${{ inputs.sitename}}
#       - name: Print jobsuccess tag to STDOUT
#         run: echo The jobsuccess value is ${{ inputs.jobsuccess}}
#       - name: Print jobfailed tag to STDOUT
#         run: echo The jobfailed value is ${{ inputs.jobfailed}}

  reusablejob:
    uses: sudopablosilva/mynewrepository/.github/workflows/ReusableWorkflow.yml@main
    with:
      subsys: ${{ inputs.subsys }}

  reusablejob2:
    uses: sudopablosilva/mynewrepository/.github/workflows/ReusableWorkflow.yml@main
    with:
      subsys: ${{ vars.MYVAR1 }}

  anotherjob:
    runs-on: ubuntu-latest
    needs: reusablejob
    steps:
      - name: Print Reusable output
        run: | 
          echo "The output is: ${{ needs.reusablejob.outputs.myworkflowoutput }}"
