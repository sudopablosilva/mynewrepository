name: EKS-Canary

on:
  push:
  workflow_dispatch:

env:
  AWS_REGION: us-east-2  # Centralized AWS region
  SERVICE_NAME: opf
  TEMPLATE_PATH: applicationsets.yaml
  # CELLS: 'cell-1,cell-2,cell-3'
  CELLS: 'cell-1,cell-2'
  WORKLOAD_TYPES: 'onebox,normal'
  TIME_BETWEEN_CANARY_STEPS_IN_SECONDS: 100s

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      aws_region: ${{ steps.set_region_output.outputs.aws_region }}
    steps:
      - uses: actions/checkout@v4.1.3
      - name: Set region output using environment file
        id: set_region_output
        run: |
          echo "aws_region=${{ env.AWS_REGION }}" >> $GITHUB_ENV
      - uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.8'
      - name: Install Python dependencies
        run: pip install -r requirements.txt
      - name: Generate manifests
        env:
          serviceName: ${{ env.SERVICE_NAME }}
          templatePath: ${{ env.TEMPLATE_PATH }}
          cells: ${{ env.CELLS }}
          workloadTypes: ${{ env.WORKLOAD_TYPES }}
          timeBetweenCanarySteps: ${{ env.TIME_BETWEEN_CANARY_STEPS_IN_SECONDS }}
        run: python adapt_applicationsets.py
      - name: Upload Manifests
        uses: actions/upload-artifact@v4.3.2
        with:
          name: manifests
          path: modified_manifest_*.yaml

  deploy:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.3
      - name: Download Manifests
        uses: actions/download-artifact@v4.1.5
        with:
          name: manifests
          path: .
      - name: Show manifest
        run: |
          cat modified_manifest_cell-1_onebox.yaml
      - uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Configure kubectl
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
        run: aws eks update-kubeconfig --name management --region ${AWS_REGION}

      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.8'
      - name: Install Python dependencies
        run: pip install -r requirements.txt
      - name: Deploy in waves
        env:
          CELLS: ${{ env.CELLS }}
          AWS_REGION: ${{ env.AWS_REGION }}
        run: python deploy_in_waves.py
