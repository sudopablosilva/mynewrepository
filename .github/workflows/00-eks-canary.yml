name: EKS-Canary

on:
  push:
  workflow_dispatch:

env:
  AWS_REGION: us-east-2  # Define AWS region here to avoid hardcoding in steps
  SERVICE_NAME: openfinance
  TEMPLATE_PATH: applicationsets.yaml

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      aws_region: ${{ env.AWS_REGION }}
    steps:
      - uses: actions/checkout@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml
          
      - name: Generate manifests
        env:
          serviceName: openfinance
          templatePath: applicationsets.yaml
        run: python adapt_applicationsets.py

  deploy:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cell: [cell-1, cell-2, cell-3]
    steps:
      - uses: actions/checkout@v2
      - name: Configure kubectl
        run: aws eks update-kubeconfig --name management --region ${{ needs.setup.outputs.aws_region }}
      - name: Deploy onebox workload
        run: kubectl apply -f modified_manifest_${{ matrix.cell }}_onebox.yaml
      - name: Check onebox workload
        id: check_onebox
        run: |
          ALARM_STATE=$(aws cloudwatch describe-alarms --alarm-names "${{ matrix.cell }}-opf-onebox-rollback-alarm" --alarm-types CompositeAlarm --region ${{ needs.setup.outputs.aws_region }} --query "CompositeAlarms[0].StateValue" --output text)
          echo "Alarm state: $ALARM_STATE"
          if [ "$ALARM_STATE" = "ALARM" ]; then
            echo "Onebox workload failed for ${{ matrix.cell }}"
            exit 1
          fi
      - name: Deploy normal workload
        run: kubectl apply -f modified_manifest_${{ matrix.cell }}_normal.yaml
      - name: Check normal workload
        id: check_normal
        run: |
          ALARM_STATE=$(aws cloudwatch describe-alarms --alarm-names "${{ matrix.cell }}-opf-high-severity-aggregate-rollback" --alarm-types CompositeAlarm --region ${{ needs.setup.outputs.aws_region }} --query "CompositeAlarms[0].StateValue" --output text)
          echo "Alarm state: $ALARM_STATE"
          if [ "$ALARM_STATE" = "ALARM" ]; then
            echo "Normal workload failed for ${{ matrix.cell }}"
            exit 1
          fi
